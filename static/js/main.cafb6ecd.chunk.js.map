{"version":3,"sources":["API.ts","components/THead/THead.tsx","components/TBody/TBody.tsx","components/Table.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["peopleFromServer","fetch","then","response","json","tHead","THead","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","useState","currentSortParam","setCurrentSortParam","map","param","key","className","type","onClick","set","get","push","toString","TBody","person","id","ClassNames","body__name","born","body__sex_male","sex","body__sex_female","to","slug","name","died","body__age","Math","ceil","motherName","fatherName","Table","people","searchParam","value","onChange","event","target","delete","filter","toLowerCase","includes","Header","App","setPeople","useEffect","result","index","father","find","personFather","mother","personMother","useMemo","sort","a","b","localeCompare","path","exact","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cafb6ecd.chunk.js","sourcesContent":["const PEOPLE_API = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const peopleFromServer = fetch(PEOPLE_API).then((response): Promise<Person[]> => (\n  response.json()\n));\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport './THead.scss';\n\nconst tHead: string[] = [\n  'id',\n  'name',\n  'sex',\n  'born',\n  'died',\n  'age',\n  'century',\n  'mother',\n  'father',\n];\n\nconst THead = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n\n  const [currentSortParam, setCurrentSortParam] = useState('');\n\n  return (\n    <thead>\n      <tr>\n        {tHead.map(param => (\n          <td\n            key={param}\n            className=\"head__cell\"\n          >\n            <button\n              type=\"button\"\n              className=\"head__button\"\n              onClick={() => {\n                searchParams.set('sortBy', param);\n\n                (\n                  searchParams.get('sortOrder') === 'asc'\n                  && searchParams.get('sortBy') === currentSortParam\n                )\n                  ? searchParams.set('sortOrder', 'desc')\n                  : searchParams.set('sortOrder', 'asc');\n\n                history.push(\n                  {\n                    search: searchParams.toString(),\n                  },\n                );\n\n                setCurrentSortParam(param);\n              }}\n            >\n              {param}\n            </button>\n          </td>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default THead;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport './TBody.scss';\n\ntype Props = {\n  person: PersonWithId;\n};\n\nconst TBody: React.FC<Props> = ({ person }) => {\n  return (\n    <tr className=\"body\">\n      <td\n        className=\"body__cell\"\n      >\n        {person.id}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__name: person.born < 1650,\n            body__sex_male: person.sex === 'm',\n            body__sex_female: person.sex === 'f',\n          },\n        )}\n      >\n        <NavLink\n          to={`/people/${person.slug}`}\n          className=\"body__link\"\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td className={ClassNames(\n        'body__cell',\n        {\n          body__sex_male: person.sex === 'm',\n          body__sex_female: person.sex === 'f',\n        },\n      )}\n      >\n        {person.sex}\n      </td>\n      <td className=\"body__cell\">\n        {person.born}\n      </td>\n      <td className=\"body__cell\">\n        {person.died}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          { body__age: person.died - person.born >= 65 },\n        )}\n      >\n        {person.died - person.born}\n      </td>\n      <td className=\"body__cell\">\n        {Math.ceil(person.died / 100)}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__sex_female: person.motherName,\n          },\n        )}\n      >\n        {person.motherName ? person.motherName : '---------'}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__sex_male: person.fatherName,\n          },\n        )}\n      >\n        {person.fatherName ? person.fatherName : '---------'}\n      </td>\n    </tr>\n  );\n};\n\nexport default TBody;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport THead from './THead/THead';\nimport TBody from './TBody/TBody';\nimport './Table.scss';\n\ntype Props = {\n  people: PersonWithId[];\n};\n\nconst Table: React.FC<Props> = ({ people }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search);\n\n  const filterPeople = () => (\n    people.filter(person => {\n      const filterText = (person.name + person.motherName + person.fatherName).toLowerCase();\n\n      return filterText.includes((searchParam.get('query') || '').toLowerCase());\n    })\n  );\n\n  return (\n    <div className=\"table\">\n      <h1>People</h1>\n      <input\n        className=\"table__search_field\"\n        type=\"text\"\n        value={searchParam.get('query') || ''}\n        onChange={event => {\n          event.target.value\n            ? searchParam.set('query', event.target.value)\n            : searchParam.delete('query');\n          history.push({\n            search: searchParam.toString(),\n          });\n        }}\n      />\n      <table className=\"table__wrapper\">\n        <THead />\n        <tbody>\n          {filterPeople().map(person => (\n            <TBody\n              person={person}\n              key={person.id}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nconst Header = () => (\n  <header className=\"header\">\n    <NavLink to=\"/\" className=\"header__link\">\n      Home\n    </NavLink>\n    <NavLink to=\"/people\" className=\"header__link\">\n      People\n    </NavLink>\n  </header>\n);\n\nexport default Header;\n","import React, { useState, useEffect, useMemo } from 'react';\n\nimport './App.css';\nimport {\n  Route,\n  Switch,\n  useLocation,\n  Redirect,\n} from 'react-router-dom';\nimport { peopleFromServer } from './API';\nimport Table from './components/Table';\nimport Header from './components/Header/Header';\n\n\nconst App = () => {\n  const [people, setPeople] = useState<PersonWithId[]>([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  useEffect(() => {\n    peopleFromServer.then(result => (\n      setPeople(result.map((person, index) => (\n        {\n          ...person,\n          id: index + 1,\n          father: result.find(personFather => personFather.name === person.fatherName),\n          mother: result.find(personMother => personMother.name === person.motherName),\n        }\n      )))\n    ));\n  }, []);\n\n  // const sortByNumber = (query: string) => (\n  //   (searchParams.get('sortOrder') === 'asc')\n  //     ? setPeople([...people].sort((a, b) => a[checkQuery(query)] - b[query]))\n  //     : setPeople([...people].sort((a, b) => b[query] - a[query]))\n  // );\n\n  useMemo(() => {\n    switch (searchParams.get('sortBy')) {\n      case 'id':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => a.id - b.id))\n          : setPeople([...people].sort((a, b) => b.id - a.id));\n        break;\n      case 'name':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => a.name.localeCompare(b.name)))\n          : setPeople([...people].sort((a, b) => b.name.localeCompare(a.name)));\n        break;\n      case 'sex':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => a.sex.localeCompare(b.sex)))\n          : setPeople([...people].sort((a, b) => b.sex.localeCompare(a.sex)));\n        break;\n      case 'born':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => a.born - b.born))\n          : setPeople([...people].sort((a, b) => b.born - a.born));\n        break;\n      case 'died':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => a.died - b.died))\n          : setPeople([...people].sort((a, b) => b.died - a.died));\n        break;\n      case 'age':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => (\n            (a.died - a.born) - (b.died - b.born)\n          )))\n          : setPeople([...people].sort((a, b) => (\n            (b.died - b.born) - (a.died - a.born)\n          )));\n        break;\n      case 'century':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => (\n            Math.ceil(a.died / 100) - Math.ceil(b.died / 100)\n          )))\n          : setPeople([...people].sort((a, b) => (\n            Math.ceil(b.died / 100) - Math.ceil(a.died / 100)\n          )));\n        break;\n      case 'mother':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => (a.motherName || 'z').localeCompare((b.motherName || 'z'))))\n          : setPeople([...people].sort((a, b) => (b.motherName || 'z').localeCompare((a.motherName || 'z'))));\n        break;\n      case 'father':\n        (searchParams.get('sortOrder') === 'asc')\n          ? setPeople([...people].sort((a, b) => (a.fatherName || 'z').localeCompare((b.fatherName || 'z'))))\n          : setPeople([...people].sort((a, b) => (b.fatherName || 'z').localeCompare((a.fatherName || 'z'))));\n        break;\n      default:\n        setPeople(people);\n        break;\n    }\n  }, [location.search]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <h1>Home</h1>\n          )}\n        />\n        <Route\n          path=\"/people/:name?\"\n          render={() => (\n            <Table\n              people={people}\n            />\n          )}\n        />\n        <Redirect\n          from=\"/home\"\n          to=\"/\"\n        />\n        <Route path=\"*\">\n          <h1>Not Found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}