{"version":3,"sources":["API.ts","components/THead/THead.tsx","components/TBody/TBody.tsx","components/Table.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["peopleFromServer","fetch","then","response","json","tHead","THead","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","useState","currentSortParam","setCurrentSortParam","map","param","key","className","type","onClick","set","get","push","toString","TBody","person","id","ClassNames","body__name","born","body__sex_male","sex","body__sex_female","to","slug","name","died","body__age","Math","ceil","motherName","fatherName","Table","people","inputValue","setInputValue","searchParam","debounceSearchParam","useCallback","debounce","inputQuery","delete","value","onChange","target","filter","toLowerCase","includes","Header","App","enumNumbers","enumString","setPeople","useEffect","result","index","father","find","personFather","mother","personMother","century","age","sortByNumber","query","a","b","sortByString","localeCompare","comparator","useMemo","sort","path","exact","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6ba28b0a.chunk.js","sourcesContent":["const PEOPLE_API = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const peopleFromServer = fetch(PEOPLE_API).then((response): Promise<Person[]> => (\n  response.json()\n));\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport './THead.scss';\n\nconst tHead: string[] = [\n  'id',\n  'name',\n  'sex',\n  'born',\n  'died',\n  'age',\n  'century',\n  'mother',\n  'father',\n];\n\nconst THead = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n\n  const [currentSortParam, setCurrentSortParam] = useState('');\n\n  return (\n    <thead>\n      <tr>\n        {tHead.map(param => (\n          <td\n            key={param}\n            className=\"head__cell\"\n          >\n            <button\n              type=\"button\"\n              className=\"head__button\"\n              onClick={() => {\n                searchParams.set('sortBy', param);\n\n                if (searchParams.get('sortOrder') === 'asc'\n                  && searchParams.get('sortBy') === currentSortParam) {\n                  searchParams.set('sortOrder', 'desc');\n                } else {\n                  searchParams.set('sortOrder', 'asc');\n                }\n\n                history.push(\n                  {\n                    search: searchParams.toString(),\n                  },\n                );\n\n                setCurrentSortParam(param);\n              }}\n            >\n              {param}\n            </button>\n          </td>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default THead;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport './TBody.scss';\n\ntype Props = {\n  person: PersonWithId;\n};\n\nconst TBody: React.FC<Props> = ({ person }) => {\n  return (\n    <tr className=\"body\">\n      <td\n        className=\"body__cell\"\n      >\n        {person.id}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__name: person.born < 1650,\n            body__sex_male: person.sex === 'm',\n            body__sex_female: person.sex === 'f',\n          },\n        )}\n      >\n        <NavLink\n          to={`/people/${person.slug}`}\n          className=\"body__link\"\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td className={ClassNames(\n        'body__cell',\n        {\n          body__sex_male: person.sex === 'm',\n          body__sex_female: person.sex === 'f',\n        },\n      )}\n      >\n        {person.sex}\n      </td>\n      <td className=\"body__cell\">\n        {person.born}\n      </td>\n      <td className=\"body__cell\">\n        {person.died}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          { body__age: person.died - person.born >= 65 },\n        )}\n      >\n        {person.died - person.born}\n      </td>\n      <td className=\"body__cell\">\n        {Math.ceil(person.died / 100)}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__sex_female: person.motherName,\n          },\n        )}\n      >\n        {person.motherName ? person.motherName : '---------'}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__sex_male: person.fatherName,\n          },\n        )}\n      >\n        {person.fatherName ? person.fatherName : '---------'}\n      </td>\n    </tr>\n  );\n};\n\nexport default TBody;\n","import React, { useCallback, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport THead from './THead/THead';\nimport TBody from './TBody/TBody';\nimport './Table.scss';\n\ntype Props = {\n  people: PersonWithId[];\n};\n\nconst Table: React.FC<Props> = ({ people }) => {\n  const [inputValue, setInputValue] = useState<string>('');\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search);\n\n  const filterPeople = () => (\n    people.filter(person => {\n      const filterText = (person.name + person.motherName + person.fatherName).toLowerCase();\n\n      return filterText.includes((searchParam.get('query') || '').toLowerCase());\n    })\n  );\n\n  const pushUrlSearchParam = (inputQuery: string) => {\n    if (inputQuery) {\n      searchParam.set('query', inputQuery);\n    } else {\n      searchParam.delete('query');\n    }\n\n    history.push({\n      search: searchParam.toString(),\n    });\n  };\n\n  const debounceSearchParam = useCallback(debounce(pushUrlSearchParam, 500), []);\n\n  return (\n    <div className=\"table\">\n      <h1>People</h1>\n      <input\n        className=\"table__search_field\"\n        type=\"text\"\n        value={inputValue}\n        onChange={({ target }) => {\n          setInputValue(target.value);\n          debounceSearchParam(target.value);\n        }}\n      />\n      <table className=\"table__wrapper\">\n        <THead />\n        <tbody>\n          {filterPeople().map(person => (\n            <TBody\n              person={person}\n              key={person.id}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nconst Header = () => (\n  <header className=\"header\">\n    <NavLink to=\"/\" className=\"header__link\">\n      Home\n    </NavLink>\n    <NavLink to=\"/people\" className=\"header__link\">\n      People\n    </NavLink>\n  </header>\n);\n\nexport default Header;\n","import React, { useState, useEffect, useMemo } from 'react';\n\nimport './App.css';\nimport {\n  Route,\n  Switch,\n  useLocation,\n  Redirect,\n} from 'react-router-dom';\nimport { peopleFromServer } from './API';\nimport Table from './components/Table';\nimport Header from './components/Header/Header';\n\n\nconst App = () => {\n  const [people, setPeople] = useState<PersonWithId[]>([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  enum enumNumbers {\n    id = 'id',\n    born = 'born',\n    died = 'died',\n    century = 'century',\n    age = 'age',\n  }\n  enum enumString {\n    name = 'name',\n    sex = 'sex',\n    motherName = 'motherName',\n    fatherName = 'fatherName',\n  }\n\n  useEffect(() => {\n    peopleFromServer.then(result => {\n      setPeople(result.map((person, index) => (\n        {\n          ...person,\n          id: index + 1,\n          father: result.find(personFather => personFather.name === person.fatherName),\n          mother: result.find(personMother => personMother.name === person.motherName),\n          century: Math.ceil(person.died / 100),\n          age: person.died - person.born,\n        }\n      )));\n    });\n  }, []);\n\n  const sortByNumber = (query: enumNumbers) => {\n    if (searchParams.get('sortOrder') === 'asc') {\n      return (a: PersonWithId, b: PersonWithId) => a[query] - b[query];\n    }\n\n    return (a: PersonWithId, b: PersonWithId) => b[query] - a[query];\n  };\n\n  const sortByString = (query: enumString) => {\n    if (searchParams.get('sortOrder') === 'asc') {\n      return (a: PersonWithId, b: PersonWithId) => (\n        (a[query] || 'z').localeCompare((b[query] || 'z'))\n      );\n    }\n\n    return (a: PersonWithId, b: PersonWithId) => (\n      (b[query] || 'z').localeCompare((a[query] || 'z'))\n    );\n  };\n\n  let comparator: (a: PersonWithId, b: PersonWithId) => number = () => 0;\n\n  useMemo(() => {\n    switch (searchParams.get('sortBy')) {\n      case 'id':\n        comparator = sortByNumber(enumNumbers.id);\n        break;\n      case 'name':\n        comparator = sortByString(enumString.name);\n        break;\n      case 'sex':\n        comparator = sortByString(enumString.sex);\n        break;\n      case 'born':\n        comparator = sortByNumber(enumNumbers.born);\n        break;\n      case 'died':\n        comparator = sortByNumber(enumNumbers.died);\n        break;\n      case 'age':\n        comparator = sortByNumber(enumNumbers.age);\n        break;\n      case 'century':\n        comparator = sortByNumber(enumNumbers.century);\n        break;\n      case 'mother':\n        comparator = sortByString(enumString.motherName);\n        break;\n      case 'father':\n        comparator = sortByString(enumString.fatherName);\n        break;\n      default:\n        setPeople(people);\n        break;\n    }\n\n    setPeople([...people.sort(comparator)]);\n  }, [location.search]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <h1>Home</h1>\n          )}\n        />\n        <Route\n          path=\"/people/:name?\"\n          render={() => (\n            <Table\n              people={people}\n            />\n          )}\n        />\n        <Redirect\n          from=\"/home\"\n          to=\"/\"\n        />\n        <Route path=\"*\">\n          <h1>Not Found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}